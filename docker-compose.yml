version: '3.8'

services:
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=src/app.py
      - FLASK_ENV=production
      - HOST=0.0.0.0
      - PORT=5000
      - REDIS_URL=redis://redis:6380/0
      - DATABASE_URL=postgresql://rps_user:rps_password@postgres:5432/rps_db
      - SQLALCHEMY_DATABASE_URI=postgresql://rps_user:rps_password@postgres:5432/rps_db
      - POSTGRES_USER=rps_user
      - POSTGRES_PASSWORD=rps_password
      - POSTGRES_DB=rps_db
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=rps_user
      - POSTGRES_PASSWORD=rps_password
      - POSTGRES_DB=rps_db
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rps_user -d rps_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data: