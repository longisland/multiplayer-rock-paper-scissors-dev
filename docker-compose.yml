version: '3.8'

services:
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=src/app.py
      - FLASK_ENV=production
      - HOST=0.0.0.0
      - PORT=5000
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://rps_user:rps_password@postgres:5432/rps_db
      - SQLALCHEMY_DATABASE_URI=postgresql://rps_user:rps_password@postgres:5432/rps_db
      - SQLALCHEMY_TRACK_MODIFICATIONS=false
      - POSTGRES_USER=rps_user
      - POSTGRES_PASSWORD=rps_password
      - POSTGRES_DB=rps_db
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=rps_user
      - POSTGRES_PASSWORD=rps_password
      - POSTGRES_DB=rps_db
      - POSTGRES_INITDB_ARGS=--data-checksums
    ports:
      - "5434:5432"
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
        volume:
          nocopy: true
      - type: bind
        source: ./postgres/backup
        target: /backup
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rps_user -d rps_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    command: >
      postgres
      -c shared_buffers=256MB
      -c max_connections=200
      -c checkpoint_timeout=600
      -c synchronous_commit=off
      -c archive_mode=on
      -c archive_command='test ! -f /backup/%f && cp %p /backup/%f'
      -c archive_timeout=60

volumes:
  redis_data:
    name: rps-game_redis_data
    external: true
  postgres_data:
    name: rps-game_postgres_data
    external: true